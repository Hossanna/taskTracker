{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","header","title","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Header","Math","floor","random","newTask","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC3B,OACA,yBACAA,QAAWA,EACXC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MAHV,UAICJ,EAJD,QAQJF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCnBTQ,EAAS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAON,EAAuB,EAAvBA,QAASO,EAAc,EAAdA,QAC9B,OACI,yBAAQJ,UAAU,SAAlB,UACI,6BAAKG,IACL,cAAC,EAAD,CAAQR,MAAM,QACdC,KAAMQ,EAAU,QAAU,MAC1BP,QAASA,QAMrBK,EAAOD,aAAe,CAClBE,MAAO,gBAOID,Q,OCNAG,EAfF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,sBAAKR,UAAS,eAAWM,EAAKG,SAAW,WAAa,IACrDC,cAAiB,kBAAMF,EAASF,EAAKK,KADtC,UAEG,+BACKL,EAAKV,KACN,cAAC,IAAD,CAASE,MAAO,CAAEH,MAAM,MACvBiB,OAAO,WACPf,QAAS,kBAAMU,EAASD,EAAKK,UAEjC,4BAAIL,EAAKO,UCINC,EAdD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9B,OACI,mCACKO,EAAMC,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CAEAA,KAAMA,EACNC,SAAWA,EACXC,SAAUA,GAHJF,EAAKK,UC6CRM,EAlDC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,EAAuBC,mBAAS,IAAhC,mBAAMvB,EAAN,KAAYwB,EAAZ,KACA,EAAqBD,mBAAS,IAA9B,mBAAMN,EAAN,KAAWQ,EAAX,KACA,EAA+BF,oBAAS,GAAxC,mBAAMV,EAAN,KAAgBa,EAAhB,KAiBA,OACI,uBAAMtB,UAAU,WAAWuB,SAhBd,SAACC,GACdA,EAAEC,iBAEE7B,GAKJsB,EAAM,CAAEtB,OAAMiB,MAAKJ,aAEnBW,EAAQ,IACRC,EAAO,IACPC,GAAY,IARRI,MAAM,sBAYV,UACI,sBAAK1B,UAAU,eAAf,UACI,yCACA,uBAAO2B,KAAK,OACZC,YAAY,WACZC,MAAOjC,EACPkC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAEtC,sBAAK7B,UAAU,eAAf,UACI,iDACA,uBAAO2B,KAAK,OACZC,YAAY,mBACZC,MAAOhB,EACPiB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAErC,sBAAK7B,UAAU,kCAAf,UACI,iDACA,uBAAO2B,KAAK,WACZK,QAASvB,EACToB,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAGjD,uBAAOhC,UAAU,gBACjB2B,KAAK,SAASE,MAAM,kB,MCoBjBK,MA5Df,WACE,MAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KAEA,EAA0BjB,mBACxB,CACI,CACIR,GAAI,EACJf,KAAM,sBACNiB,IAAK,oBACLJ,UAAU,GAEd,CACIE,GAAI,EACJf,KAAM,oBACNiB,IAAK,oBACLJ,UAAU,GAEd,CACIE,GAAI,EACJf,KAAM,gBACNiB,IAAK,oBACLJ,UAAU,KAlBpB,mBAAOM,EAAP,KAAcsB,EAAd,KA2CA,OACE,qBAAKrC,UAAU,YAAf,SACE,qCACE,cAACsC,EAAD,CAAQzC,QAAW,kBAAMuC,GAAiBD,IAC1C/B,QAAW+B,EACXhC,MAAM,iBACLgC,GAAe,cAAC,EAAD,CAASjB,MAxBjB,SAACZ,GACf,IAAMK,EAAK4B,KAAKC,MAAqB,IAAfD,KAAKE,UAAmB,EACxCC,EAAO,aAAK/B,MAAOL,GACzB+B,EAAS,GAAD,mBAAKtB,GAAL,CAAY2B,QAsBb3B,EAAM4B,OAAS,EAAI,cAAC,EAAD,CAAO5B,MAAOA,EAClCR,SAlBW,SAACI,GAClB0B,EAAStB,EAAM6B,QAAO,SAACtC,GAAD,OAAUA,EAAKK,KAAOA,OAiBhBH,SAbP,SAACG,GACtB0B,EAAStB,EAAMC,KAAI,SAACV,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAC3BG,UAAWH,EAAKG,WAAaH,SAW6B,qBCxD9DuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f4db7a4f.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    return (\n    <button\n    onClick = {onClick}\n    style={{ backgroundColor: color }} \n    className='btn'> \n    {text} </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst header = ({ title, onClick, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color='black' \n            text={showAdd ? 'Close' : 'Add'} \n            onClick={onClick} />\n        </header>\n    )\n}\n\n\nheader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nheader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className= {`task ${task.reminder ? 'reminder' : '' }`}\n         onDoubleClick = {() => onToggle(task.id)}>\n           <h3>\n               {task.text} \n               <FaTimes style={{ color:'red', \n                cursor:'pointer' }} \n                onClick={() => onDelete(task.id)} />\n            </h3> \n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n            <Task \n            key= {task.id} \n            task={task} \n            onDelete= {onDelete} \n            onToggle={onToggle} />\n            )) }   \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const[text, setText] = useState('')\n    const[day, setDay] = useState('')\n    const[reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text){\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' \n                placeholder='Add Task'\n                value={text} \n                onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type='text' \n                placeholder='Add Day and Time'\n                value={day} \n                onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox'\n                checked={reminder}\n                value={reminder} \n                onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input className='btn btn-block' \n            type='submit' value='Save Task' />\n        </form>\n    )\n}\n\nexport default AddTask\n\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\nimport './index.css' \n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState(\n    [\n        { \n            id: 1,\n            text: 'Doctors Appointment',\n            day: 'Feb 5th at 2:30pm',\n            reminder: true,\n        },\n        {  \n            id: 2,\n            text: 'Meeting at School',\n            day: 'Feb 6th at 1:30pm',\n            reminder: true,\n        },\n        {  \n            id: 3,\n            text: 'Food Shopping',\n            day: 'Feb 5th at 2:30pm',\n            reminder: false,\n        }\n    ]\n)\n\n\n// add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random()* 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n\n// delete task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id ))\n} \n\n// toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? { ...task, \n    reminder: !task.reminder } : task))\n}\n\n  return (\n    <div className=\"container\">\n      <>\n        <Header onClick = {() => setShowAddTask (!showAddTask)}\n        showAdd = {showAddTask}\n        title='Task Tracker' />\n        {showAddTask && <AddTask onAdd={addTask} />}\n        {tasks.length > 0 ? <Tasks tasks={tasks} \n        onDelete={deleteTask} onToggle= {toggleReminder} /> : 'No Task Left'}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}